/*
 * Copyright (c) 2015. Ronald D. Kurr kurr@jvmguy.com
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

import java.util.concurrent.ThreadLocalRandom

buildscript {
    repositories {
        maven {
            url = artifactory
        }
    }
    dependencies {
        classpath "io.spring.gradle:dependency-management-plugin:${dependencyPluginVersion}"
        classpath "org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}"
        classpath "org.springframework.cloud:spring-cloud-contract-gradle-plugin:${springCloudContractVersion}"
    }
}

description = 'Example messaging micro-service'
group = 'org.kurron'
ext.builtOn = new Date()

apply from: "$rootDir/gradle/repositories.gradle"
apply from: "$rootDir/gradle/version.gradle"
apply from: "$rootDir/gradle/groovy.gradle"
apply from: "$rootDir/gradle/io-platform.gradle"
apply from: "$rootDir/gradle/boot.gradle"
apply from: "$rootDir/gradle/codenarc.gradle"
apply from: "$rootDir/gradle/jacoco.gradle"
apply from: "$rootDir/gradle/maven-publish.gradle"
apply from: "$rootDir/gradle/contract.gradle"

apply plugin: 'build-announcements'
apply plugin: 'project-report'
apply plugin: 'build-dashboard'


defaultTasks = ['clean', 'build']

dependencies {
    compile "org.codehaus.groovy:groovy-all:${groovyVersion}:indy"
    compile 'org.springframework.boot:spring-boot-starter-actuator'
    compile 'org.springframework.cloud:spring-cloud-stream'
    compile 'org.springframework.cloud:spring-cloud-stream-binder-rabbit'
    compile "org.kurron:tools-groovy:${toolsGroovyVersion}"

    // so the actuators can use hypermedia
    runtime 'org.springframework.boot:spring-boot-starter-hateoas'
    runtime 'org.webjars:hal-browser'

    runtime "net.logstash.logback:logstash-logback-encoder:${logstashLogbackVersion}"

    testCompile 'org.springframework.boot:spring-boot-starter-test'
    testCompile( 'org.spockframework:spock-spring' ) {
        exclude module: 'groovy-all'
    }
}

// Show how to exclude objects from being required to have a unit-level test
ext.coverageExcludes = [
        'org/kurron/example/'
]
